// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  uniNumber      String   @unique
  birthDate      DateTime
  nationalNumber String
  nationality String
  admission String? @default("")
  specialization String
  role String?
  hashedPassword String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  request Request[]
  roleStudent Role[]
  requestTraining RequestTraining[]
}

model Role {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  value String
  name String
  userId String @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete:Cascade)
}

model Request {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique @db.ObjectId
  admission String? @default("معلق")
  file String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model RequestTraining {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique @db.ObjectId
  admission String? @default("معلق")
  file String[] @default([])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
